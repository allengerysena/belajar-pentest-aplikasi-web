<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SQL Injection Types</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
        }
        .main-container {
            width: 80%;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }
        .content-container {
            width: 48%;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }
        .content-container h4 {
            font-weight: bold;
            text-align: center;
            cursor: pointer;
        }
        .description {
            display: none;
            margin-top: 10px;
        }
        .btn-custom {
            width: 100%;
            margin-top: 20px;
            background-color: #007bff;
            color: white;
        }
        .btn-custom:hover {
            background-color: #0056b3;
            color: white;
        }
    </style>
</head>
<body>
    <div class="main-container">
        <h2 class="text-center">Understanding SQL Injection Types</h2>
        <br>
        <div class="d-flex justify-content-between">
            <div class="content-container">
                <h4 onclick="toggleDescription('desc-error')">SQL Injection Error-Based</h4>
                <div id="desc-error" class="description">
                    <p>
                        In an error-based SQL injection, the attacker forces the database to show error messages. 
                        These messages can reveal sensitive information about the database structure and help the attacker 
                        to craft further malicious queries.
                    </p>
                    <a href="sqli-error-based.php" class="btn btn-custom">SQLi Error-Based</a>
                </div>
            </div>
            <div class="content-container">
                <h4 onclick="toggleDescription('desc-blind')">SQL Injection Blind-Based</h4>
                <div id="desc-blind" class="description">
                    <p>
                        In a blind SQL injection, the attacker does not see error messages. Instead, they send different 
                        queries to observe changes in the application's behavior. This type of attack is slower but can 
                        still lead to unauthorized access to the database.
                    </p>
                    <a href="sqli-blind-based.php" class="btn btn-custom">SQLi Blind-Based</a>
                </div>
            </div>
        </div>
    </div>

    <script>
        function toggleDescription(id) {
            var element = document.getElementById(id);
            if (element.style.display === "none" || element.style.display === "") {
                element.style.display = "block";
            } else {
                element.style.display = "none";
            }
        }
    </script>
</body>
</html>
